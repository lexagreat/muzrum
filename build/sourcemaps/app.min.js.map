{"version":3,"sources":["app.js"],"names":["maskOptions","mask","document","querySelectorAll","length","forEach","item","IMask","body","gsap","registerPlugin","ScrollTrigger","lenis","Lenis","duration","smooth","direction","raf","time","requestAnimationFrame","headerWork","header","querySelector","classList","add","homePage","to","scrollTrigger","trigger","start","end","scrub","opacity","slider","paginations","slides","progressCircles","Swiper","slidesPerView","mousewheel","enabled","forceToAxis","speed","autoplay","delay","effect","loop","allowTouchMove","simulateTouch","creativeEffect","prev","shadow","translate","next","on","[object Object]","s","timeLeft","progress","style","strokeDashoffset","swiper","i","getAttribute","index","remove","banner","clicker","bannerBtn","bannerCloseBtn","onclick","hero","window","addEventListener","Select","selector","options","this","$el","selectedId","render","setup","placeholder","data","innerHTML","getTemplate","clickHandler","bind","$value","event","type","target","dataset","toggle","id","select","closest","current","multi","filter","some","temp","find","splice","findIndex","push","map","value","join","close","onSelect","contains","open","items","cls"],"mappings":"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","file":"../js/app.min.js","sourcesContent":["const maskOptions = {\n   mask: \"+{7} (000) 000-00-00\",\n   // lazy: false,  // make placeholder always visible\n   // placeholderChar: '0'     // defaults to '_'\n};\nif (document.querySelectorAll(\"[data-phone]\").length) {\n   document.querySelectorAll(\"[data-phone]\").forEach((item) => {\n      const mask = IMask(item, maskOptions);\n   });\n}\nconst body = document.body;\ngsap.registerPlugin(ScrollTrigger);\nconst lenis = new Lenis({\n   duration: 0.4,\n   smooth: true,\n   direction: \"vertical\",\n   // lerp: 0.05,\n});\nwindow.lenis = lenis;\n\nfunction raf(time) {\n   lenis.raf(time);\n   requestAnimationFrame(raf);\n}\n\nrequestAnimationFrame(raf);\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n   headerWork();\n   homePage();\n});\nfunction headerWork() {\n   const header = document.querySelector(\".header\");\n   if (!header) return;\n   const main = document.querySelector(\"main.main\");\n   if (!main) {\n      header.classList.add(\"transparent\");\n   }\n}\nfunction homePage() {\n   function hero() {\n      const slider = document.querySelector(\".home-hero .swiper\");\n      if (!slider) return;\n      const paginations = document.querySelectorAll(\n         \".home-hero__pagination > div\"\n      );\n      const slides = document.querySelectorAll(\".home-hero__slide\");\n      const progressCircles = document.querySelectorAll(\".progress-circle\");\n      const totalLength = 138; // Окружность круга (примерно 2 * π * r)\n      new Swiper(slider, {\n         slidesPerView: 1,\n         mousewheel: {\n            enabled: false,\n            forceToAxis: true,\n         },\n         speed: 2000,\n         autoplay: {\n            enabled: true,\n            delay: 5000,\n         },\n         effect: \"creative\",\n         loop: true,\n         allowTouchMove: false, // Отключить свайпы\n         simulateTouch: false, // Отключить эмуляцию свайпов мышью\n         creativeEffect: {\n            prev: {\n               shadow: true,\n               translate: [\"-20%\", 0, -1],\n            },\n            next: {\n               translate: [\"100%\", 0, 0],\n            },\n         },\n         on: {\n            autoplayTimeLeft(s, timeLeft, progress) {\n               progressCircles.forEach((item) => {\n                  item.style.strokeDashoffset = totalLength * progress;\n               });\n            },\n            slideNextTransitionEnd(swiper) {\n               let i = 0;\n               if (\n                  document.querySelector(\n                     \".home-hero .swiper-slide.swiper-slide-active\"\n                  )\n               ) {\n                  i = document\n                     .querySelector(\n                        \".home-hero .swiper-slide.swiper-slide-active\"\n                     )\n                     .getAttribute(\"data-swiper-slide-index\");\n               }\n\n               paginations.forEach((item, index) => {\n                  item.classList.remove(\"active\");\n               });\n               paginations[i].classList.add(\"active\");\n               slides.forEach((item, index) => {\n                  item.classList.remove(\"active\");\n               });\n               slides[i].classList.add(\"active\");\n            },\n            init() {\n               paginations[0].classList.add(\"active\");\n               slides[0].classList.add(\"active\");\n            },\n         },\n      });\n\n      const banner = document.querySelector(\".home-hero__banner\");\n      const clicker = document.querySelector(\".home-hero__clicker\");\n      const bannerBtn = document.querySelector(\".home-hero__form .icon-btn\");\n      const bannerCloseBtn = document.querySelector(\n         \".home-hero__thanks button\"\n      );\n      clicker.onclick = () => {\n         banner.classList.add(\"step-2\");\n      };\n      bannerBtn.onclick = () => {\n         banner.classList.remove(\"step-2\");\n         banner.classList.add(\"step-3\");\n      };\n      bannerCloseBtn.onclick = () => {\n         banner.classList.remove(\"step-2\");\n         banner.classList.remove(\"step-3\");\n         banner.classList.add(\"hidden\");\n      };\n   }\n   gsap.to(\".home-hero__bg\", {\n      scrollTrigger: {\n         trigger: \".home-page\", // элемент, который должен запускать анимацию\n         start: \"top 90%\", // когда верх элемента достигает 80% высоты экрана\n         end: \"top -50%\", // когда низ элемента достигает 20% высоты экрана\n         // markers: true, // включить маркеры для визуальной отладки\n         scrub: 1.5,\n      },\n      opacity: 1,\n   });\n   hero();\n}\n\nclass Select {\n   constructor(selector, options) {\n      this.$el = document.querySelector(selector);\n      this.options = options;\n      this.selectedId = options.selectedId;\n\n      this.render();\n      this.setup();\n   }\n   render() {\n      this.$el.classList.add(\"select\");\n      const { placeholder, data, selectedId } = this.options;\n      this.$el.innerHTML = this.getTemplate(data, placeholder, selectedId);\n      if (placeholder) {\n         this.$el\n            .querySelector(`[data-type=\"input\"]`)\n            .classList.add(\"placeholder\");\n      }\n   }\n   setup() {\n      this.clickHandler = this.clickHandler.bind(this);\n      this.$el.addEventListener(\"click\", this.clickHandler);\n      this.$value = this.$el.querySelector(`[data-type=\"input\"] span`);\n   }\n   clickHandler(event) {\n      const { type } = event.target.dataset;\n      if (type === \"input\") {\n         this.toggle();\n      } else if (type === \"item\") {\n         const { id } = event.target.dataset;\n         this.select(id);\n      } else if (type === \"back\") {\n         this.toggle();\n      } else if (type === \"header\") {\n         this.toggle();\n      } else if (event.target.closest(\".select__header\")) [this.toggle()];\n   }\n   get current() {\n      if (this.options.multi) {\n         return this.options.data.filter((item) =>\n            this.selectedId.some((temp) => temp === item.id)\n         );\n      } else {\n         return this.options.data.find((item) => item.id === this.selectedId);\n      }\n   }\n   select(id) {\n      this.$el\n         .querySelector(`[data-type=\"input\"]`)\n         .classList.remove(\"placeholder\");\n      if (this.options.multi) {\n         if (this.selectedId.some((item) => item == id)) {\n            this.selectedId.splice(\n               this.selectedId.findIndex((item) => item == id),\n               1\n            );\n         } else {\n            this.selectedId.push(id);\n         }\n         if (this.current.length) {\n            this.$value.innerHTML = this.current\n               .map((item) => item.value)\n               .join(\", \");\n         } else {\n            this.$value.innerHTML = this.options.placeholder;\n            // this.$el\n            //    .querySelector(`[data-type=\"input\"]`)\n            //    .classList.add(\"placeholder\");\n         }\n      } else {\n         this.selectedId = id;\n         this.$value.innerHTML = this.current.value;\n      }\n\n      this.$el.querySelectorAll(`[data-type=\"item\"]`).forEach((item) => {\n         item.classList.remove(\"selected\");\n      });\n      if (this.options.multi) {\n         this.current.forEach((item) => {\n            this.$el\n               .querySelector(`[data-id='${item.id}']`)\n               .classList.add(\"selected\");\n         });\n      } else {\n         this.$el\n            .querySelector(`[data-id='${this.current.id}']`)\n            .classList.add(\"selected\");\n      }\n\n      if (!this.options.multi) {\n         this.close();\n      }\n\n      if (this.options.onSelect) {\n         this.options.onSelect(this.current, this.$el);\n      }\n   }\n   open() {\n      this.$el.classList.add(\"open\");\n   }\n   close() {\n      this.$el.classList.remove(\"open\");\n   }\n   toggle() {\n      if (this.$el.classList.contains(\"open\")) {\n         this.close();\n      } else {\n         this.open();\n      }\n   }\n   getTemplate(data, placeholder = `<span></span>`, selectedId) {\n      const items = data.map((item) => {\n         let cls = \"\";\n         if (\n            (this.options.multi &&\n               selectedId.some((temp) => temp == item.id)) ||\n            (!this.options.multi && item.id === selectedId)\n         ) {\n            placeholder = item.value;\n            cls = \"selected\";\n         }\n         if (this.options.multi) {\n         } else {\n         }\n         return `<li class=\"select__item ${cls}\" data-type=\"item\" data-id=\"${item.id}\">${item.value}</li>`;\n      });\n      return `\n      <div class=\"select__header\" data-type=\"header\">\n      <div class=\"select__back\" data-type=\"back\"></div>\n      <div class=\"select__title\" data-type=\"input\">\n         <span>${placeholder}</span>\n         <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M13.9334 6.08291C14.1498 6.29933 14.1498 6.6502 13.9334 6.86662L7.99991 12.8001L2.06643 6.86662C1.85002 6.6502 1.85002 6.29933 2.06643 6.08291C2.28285 5.8665 2.73748 5.86637 2.9539 6.08278L8.00027 11.0924L12.9972 6.08272C13.2136 5.86631 13.717 5.8665 13.9334 6.08291Z\" fill=\"black\"/>\n         </svg>      \n    </div>\n      </div>\n      <div class=\"select__content\">\n         <ul class=\"select__list\">\n            ${items.join(\"\")}\n         </ul>\n      </div>\n      `;\n   }\n}\n// const sort = new Select(\"#select\", {\n//    // placeholder: \"Сортировка\",\n//    selectedId: [\"Casio\"],\n//    multi: true,\n//    placeholder: \"text\",\n//    data: [\n//       {\n//          value: \"Casio\",\n//          id: \"Casio\",\n//       },\n//       {\n//          value: \"Becker\",\n//          id: \"Becker\",\n//       },\n//       {\n//          value: \"Korg\",\n//          id: \"Korg\",\n//       },\n//       {\n//          value: \"Kawai\",\n//          id: \"Kawai\",\n//       },\n//       {\n//          value: \"Rockdale\",\n//          id: \"Rockdale\",\n//       },\n//       {\n//          value: \"Kurzweil\",\n//          id: \"Kurzweil\",\n//       },\n//       {\n//          value: \"Roland\",\n//          id: \"Roland\",\n//       },\n//       {\n//          value: \"Nux\",\n//          id: \"Nux\",\n//       },\n//       {\n//          value: \"Ringway\",\n//          id: \"Ringway\",\n//       },\n//       {\n//          value: \"Orla\",\n//          id: \"Orla\",\n//       },\n//       {\n//          value: \"Yamaha\",\n//          id: \"Yamaha\",\n//       },\n//       {\n//          value: \"Mikado\",\n//          id: \"Mikado\",\n//       },\n//       {\n//          value: \"Artesia\",\n//          id: \"Artesia\",\n//       },\n//       {\n//          value: \"Antares\",\n//          id: \"Antares\",\n//       },\n//       {\n//          value: \"Medeli\",\n//          id: \"Medeli\",\n//       },\n//       {\n//          value: \"Tesler\",\n//          id: \"Tesler\",\n//       },\n//    ],\n//    onSelect(item, select) {\n//       select.classList.add(\"filled\");\n//       console.log(item);\n//    },\n// });\n"]}